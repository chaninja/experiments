<?xml version="1.0"?>
<project name="Utility" default="compile" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="build.dir" location="build" />
    <property name="build.prod.dir" location="${build.dir}/prod" />
    <property name="build.test.dir" location="${build.dir}/test" />
    <property name="src.dir" location="src" />
    <property name="test.dir" location="test" />
    <property name="lib.dir" location="lib" />
    <property name="vendor.lib.dir" location="vendor/lib" />
    <property name="db.dir" location="db" />
    <property name="docs.dir" location="docs" />
    <property name="config.dir" location="config" />
    <property name="compile.debug" value="true" />
    <property name="dist.dir" location="dist" />
    <property name="jar.name" value="${ant.project.name}.jar" />
    <property name="jar.path" location="${dist.dir}/${jar.name}" />
    <property name="conf.dir" location="conf" />
	<property name="ivy.file" value="${basedir}/ivy.xml" />

    <path id="project.classpath">
        <pathelement location="${build.prod.dir}" />
        <pathelement location="${build.test.dir}" />
        <pathelement location="${build.dir}" />
        <pathelement location="${db.dir}" />
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${vendor.lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>
    
	<property name="ivysettings" value="${basedir}/ivy/ivysettings.xml" />
	<ivy:settings file="${ivysettings}" />
	
    <path id="build.classpath">
        <path refid="project.classpath" />
    </path>
    
    <path id="test.classpath">
        <path refid="project.classpath" />
    </path>

    <!-- - - - - - - - - - - - - - - - - - 
          target: prepare                      
         - - - - - - - - - - - - - - - - - -->
    <target name="prepare">
        <mkdir dir="${build.prod.dir}" />
        <mkdir dir="${build.test.dir}" />
        <mkdir dir="${dist.dir}" />
    </target>
	
	<property name="ant-contrib.jar" location="lib/ant-contrib-1.0b3.jar"/>
    <target name="load-antcontrib">
      <typedef resource="net/sf/antcontrib/antlib.xml" uri="antlib:net.sf.antcontrib" onerror="failall">
         <classpath path="${ant-contrib.jar}"/>
      </typedef>
    </target>

	<!-- ================================= 
          target: resolve              
         ================================= -->
    <target name="resolve" depends="" description="--> resolve and retrieve dependencies with ivy">
        <mkdir dir="${lib.dir}"/> <!-- not usually necessary, ivy creates the directory IF there are dependencies -->
    	
    	<!-- the call to resolve is not mandatory, retrieve makes an implicit call if we don't -->
    	<ivy:resolve file="${ivy.file}"/>
    	<ivy:retrieve pattern="${lib.dir}/[artifact].[ext]" />
    </target>
    
    <!-- ================================= 
          target: report              
         ================================= -->
    <target name="report" depends="resolve" description="--> generates a report of dependencies">
        <ivy:report todir="${build.dir}"/>
    </target>
    
    <target name="ivy-new-version" depends="" unless="ivy.new.revision">
    	<!-- default module version prefix value -->
		<property name="module.version.prefix" value="${ivy.revision}." />
		
    	<!-- gets next version number from ivy repository -->
		<ivy:info file="${ivy.file}" />
    	<ivy:buildnumber 
    		organisation="${ivy.organisation}" module="${ivy.module}" 
    		branch="${ivy.branch}"
    		revision="${module.version.prefix}" defaultBuildNumber="1" revSep=""/>
    </target>

    <target name="version" depends="ivy-new-version">
    	<!-- writes out the new version computed to a file -->
		<echo message="version=${ivy.new.revision}" file="${dist.dir}/${ant.project.name}.properties" append="false" />

		<!-- load generated version properties file -->
        <property file="${dist.dir}/${ant.project.name}.properties" />
    </target>

    <!-- ================================= 
          target: compile              
         ================================= -->
    <target name="compile" depends="prepare, resolve" description="compile project">
        <javac srcdir="${src.dir}" destdir="${build.prod.dir}" debug="${compile.debug}" target="1.5" source="1.5">
            <classpath refid="build.classpath" />
            <!-- <compilerarg value="-Xlint:unchecked"/> -->
        </javac>
	<copy todir="${build.prod.dir}">
	    <fileset dir="${src.dir}" excludes="**/*.java"/>
	</copy>
    </target>

	<!-- ================================= 
          target: publish remote              
         ================================= -->
    <target name="publish-remote" depends="load-antcontrib, jar, zip-source" description="--> publish this project in the ivy repository">
    	<ivy:publish artifactspattern="${dist.dir}/[artifact].[ext]" 
    			           resolver="projects"
    			           pubrevision="${version}"
    					   pubbranch="${ivy.branch}"
				   		   update="true"
    					   forcedeliver="true"
    			           status="${ivy.status}"
    	/>
        <echo message="project ${ant.project.name} released with version ${version}" />
    </target>

    <!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" depends="" description="--> clean">
        <delete dir="${build.prod.dir}" />
        <delete dir="${build.test.dir}" />
        <delete dir="${dist.dir}" />
    </target>
    
    <!-- ================================= 
          target: clean ivy cache              
         ================================= -->
    <target name="clean-cache" description="--> clean the ivy cache files">
        <ivy:cleancache />
    </target>
    
    <!-- ================================= 
          target: jar              
         ================================= -->
    <target name="jar" depends="compile, version">
        <jar destfile="${jar.path}" basedir="${build.prod.dir}" >
        	<manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Version" value="${ivy.new.revision}" />
            </manifest>
        </jar>
    </target>
    
	<!-- ================================= 
          target: zip-source              
         ================================= -->
    <target name="zip-source" depends="">
        <zip destfile="${dist.dir}/${ant.project.name}-sources.zip" 
        		includes="src/**,test/**" basedir="${basedir}" >
        </zip>
    </target>
	
    <!-- - - - - - - - - - - - - - - - - - 
          target: compile-tests                      
         - - - - - - - - - - - - - - - - - -->
    <target name="compile-tests" depends="compile">
        <javac srcdir="${test.dir}" destdir="${build.test.dir}" debug="${compile.debug}">
            <classpath refid="project.classpath">
            </classpath>
        </javac>
    </target>


    <!-- ================================= 
          target: test              
         ================================= -->
    <target name="test" depends="compile-tests" description="--> test">
        <junit haltonfailure="true">
            <classpath refid="test.classpath" />
            <formatter type="brief" usefile="false" />
            <batchtest>
                <fileset dir="${build.test.dir}">
                    <include name="**/*Test*.class" />
                </fileset>
            </batchtest>
        </junit>
    </target>

</project>